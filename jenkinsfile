#!groovy

def ENVIRONMENT = 'dev'

pipeline {
	agent any

	environment1 {
            image = "annabells/sosapp-accounts-service"
            registry = "docker.io"
    }

    environment2 {
            image = "annabells/sosapp-emergency-service"
            registry = "docker.io"
    }

    environment3 {
            image = "annabells/sosapp-hotline-service"
            registry = "docker.io"
    }

   environment4 {
            image = "annabells/sosapp-messenger-service"
            registry = "docker.io"
   }

	stages {

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Print Environment') {
             steps {
                h('ls -al')
                sh('printenv')
            }
        }

		stage('Build docker image') {
             steps {
                  script {
                        docker.withRegistry('', 'dockerhub') {
                            def slackImage = docker.build("${env.image1}:${BUILD_NUMBER}")
                            slackImage.push()
                            slackImage.push('latest')

                             def slackImage = docker.build("${env.image2}:${BUILD_NUMBER}")
                             slackImage.push()
                             slackImage.push('latest')

                             def slackImage = docker.build("${env.image3}:${BUILD_NUMBER}")
                             slackImage.push()
                             slackImage.push('latest')

                             def slackImage = docker.build("${env.image4}:${BUILD_NUMBER}")
                             slackImage.push()
                             slackImage.push('latest')
                       }
                  }
             }
        }

		stage('Deployment'){
            steps {
                sh "docker-compose up -d"
            }
        }



        stage('tag docker image') {
            steps {
                sh "docker tag ${env.image}:${BUILD_NUMBER} ${env.image1}:latest"
                sh "docker tag ${env.image}:${BUILD_NUMBER} ${env.image2}:latest"
                sh "docker tag ${env.image}:${BUILD_NUMBER} ${env.image3}:latest"
                sh "docker tag ${env.image}:${BUILD_NUMBER} ${env.image4}:latest"
            }
        }

        stage('push docker image') {
            steps {
                h "docker push ${env.image1}:latest"
                h "docker push ${env.image2}:latest"
                h "docker push ${env.image3}:latest"
                h "docker push ${env.image4}:latest"
            }
        }

//         stage('Verify new docker image(s)') {
//             steps {
//                 sh('docker images')
//             }
//         }

	}
}